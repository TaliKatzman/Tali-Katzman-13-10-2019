{"version":3,"sources":["images/spinner.gif","actions/index.js","constants.js","components/ToggleViewController.js","components/Header.js","API.js","components/Search.js","components/CurrentWeather.js","components/ForecastItem.js","components/ForecastContainer.js","components/FavoritesController.js","components/HomePage.js","components/FavoritesItem.js","components/FavoritesPage.js","components/MainContent.js","App.js","reducers/view.js","reducers/favorites.js","reducers/location.js","reducers/index.js","index.js"],"names":["module","exports","actionTypes","setViewHome","type","setLocation","locationKey","cityName","VIEW_TYPES","HOME","FAVORITES","URLS","API_KEY","connect","state","activeView","view","dispatch","displayHome","displayFavorites","props","className","onClick","Header","size","getCurrentWeather","url","fetch","then","data","json","Search","debouncedOnSearchChange","debounce","onSearchChange","userInput","suggestions","suggestion","newLocation","LocalizedName","Country","Key","this","changeLocation","setState","input","getAutoComplete","res","slice","onChange","e","target","value","name","placeholder","autoComplete","map","key","onSelectSuggestion","Component","loc","CurrentWeather","city","temp","ForecastItem","forecast","dayName","Date","getDay","Temperature","Minimum","Value","ForecastContainer","weatherForecast","ownProps","favoritesArr","favorites","add","remove","isFavorited","filter","obj","length","HomePage","currentWeather","isLoading","changeCurrentLocation","bind","location","showLoading","promise1","currentLocationKey","promise2","getWeatherForecast","DailyForecasts","Promise","all","hideLoading","prevProps","prevState","snapshot","currentCityElement","loadingElement","Metric","Spinner","FavoritesItem","tempElement","clickHandler","onFavoriteSelect","currentView","App","action","defaultLocation","combineReducers","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24581fd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.439dc825.gif\";","export const actionTypes = {\r\n    SET_VIEW_HOME: 'SET_VIEW_HOME',\r\n    SET_VIEW_FAVORITES: 'SET_VIEW_FAVORITES',\r\n    ADD_FAVORITE: 'ADD_FAVORITE',\r\n    REMOVE_FAVORITE: 'REMOVE_FAVORITE',\r\n    SET_LOCATION : 'SET_LOCATION'\r\n}\r\n\r\nexport const setViewHome = () => ({\r\n    type: actionTypes.SET_VIEW_HOME\r\n})\r\n\r\nexport const setViewFavorites = () => ({\r\n    type: actionTypes.SET_VIEW_FAVORITES\r\n})\r\n\r\nexport const addFavorite = (locationKey,cityName) => ({\r\n    type: actionTypes.ADD_FAVORITE,\r\n    locationKey:locationKey,\r\n    cityName:cityName\r\n    \r\n})\r\n\r\nexport const removeFavorite = (locationKey) => ({\r\n    type: actionTypes.REMOVE_FAVORITE,\r\n    locationKey:locationKey\r\n})\r\n\r\nexport const setLocation = (locationKey,cityName) => ({\r\n    type: actionTypes.SET_LOCATION,\r\n    locationKey:locationKey,\r\n    cityName:cityName\r\n})","export const VIEW_TYPES = {\r\n    HOME : 'HOME',\r\n    FAVORITES : 'FAVORITES'\r\n}\r\n\r\nexport const URLS = {\r\n    API_CURRENT_WEATHER: 'http://dataservice.accuweather.com/currentconditions/v1/',\r\n    API_FORECAST: 'http://dataservice.accuweather.com/forecasts/v1/daily/5day/',\r\n    API_AUTOCOMPLETE: 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete',\r\n}\r\n\r\n// export const API_KEY = 'yHAQscY7LS2ebTCFLQg9OLFgKSuyiLKv';\r\nexport const API_KEY = '5oMc4uGoSTA8uZGZC4056zo0enUCtUKB';\r\n\r\nexport const DEFAULT_LOCATION_KEY = '215854';\r\n\r\nexport const DEFAULT_LOCATION_NAME = 'Tel-Aviv, Israel';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {setViewHome,setViewFavorites} from '../actions';\r\nimport {VIEW_TYPES} from '../constants';\r\n\r\nfunction ToggleViewController(props) {\r\n\r\n    const activeView = props.activeView;\r\n    const displayHome = props.displayHome;\r\n    const displayFavorites = props.displayFavorites;\r\n    return (\r\n        <div className=\"toggle-container\">\r\n            <span onClick={displayHome} className={`btn ${activeView === VIEW_TYPES.HOME ? \"btn--active\" : \"\"}`}>Home</span>\r\n            <span onClick={displayFavorites} className={`btn ${activeView === VIEW_TYPES.FAVORITES ? \"btn--active\" : \"\"}`}>Favorites</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    activeView: state.view\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    displayHome: () => dispatch(setViewHome()),\r\n    displayFavorites: () => dispatch(setViewFavorites())\r\n})\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(ToggleViewController)\r\n","import React from 'react';\r\nimport { WiCloudy } from \"react-icons/wi\";\r\nimport ToggleViewController from './ToggleViewController';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__title\">\r\n        <WiCloudy size={70} />\r\n        <h1 className=\"heading\">My Weather App</h1>\r\n      </div>\r\n      <ToggleViewController />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {URLS,API_KEY} from './constants';\r\n\r\nexport const getCurrentWeather = (locationKey) => {\r\n    const url = `${URLS.API_CURRENT_WEATHER}${locationKey}?apikey=${API_KEY}`\r\n    return fetch(url)\r\n    .then(data=>data.json())\r\n}\r\n\r\nexport const getAutoComplete = (input) => {\r\n    const url = `${URLS.API_AUTOCOMPLETE}?q=${input}&apikey=${API_KEY}`\r\n    return fetch(url)\r\n    .then(data=>data.json())\r\n}\r\n\r\nexport const getWeatherForecast = (locationKey) => {\r\n    const url = `${URLS.API_FORECAST}${locationKey}?apikey=${API_KEY}&metric=true`\r\n    return fetch(url)\r\n    .then(data=>data.json())\r\n}","import React, { Component } from 'react';\r\nimport { getAutoComplete } from '../API';\r\nimport debounce from 'debounce';\r\nimport { setLocation } from '../actions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.debouncedOnSearchChange = debounce(this.onSearchChange, 500);\r\n\r\n    this.state = { userInput: '', suggestions: [] }\r\n  }\r\n\r\n  onSelectSuggestion(suggestion) {\r\n    const newLocation = {\r\n      cityName: `${suggestion.LocalizedName}, ${suggestion.Country.LocalizedName}`,\r\n      locationKey: suggestion.Key\r\n    };\r\n    this.props.changeLocation(newLocation);\r\n  }\r\n\r\n  onSearchChange(userInput) {\r\n    this.setState({ userInput: userInput }, () => {\r\n      getAutoComplete(this.state.userInput)\r\n      .then(res => {\r\n        this.setState({\r\n          suggestions: res.slice(0, 5)\r\n        })\r\n      });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search\">\r\n        <div className=\"search-container\">\r\n        <input onChange={(e) => this.debouncedOnSearchChange(e.target.value)} type=\"text\" name=\"text\" placeholder=\"Search City...\" autoComplete=\"off\" />\r\n        {this.state.suggestions.map((suggestion)=>{\r\n          return <div className=\"suggestionItem\" key={suggestion.Key} onClick={() => this.onSelectSuggestion(suggestion)}>{`${suggestion.LocalizedName}, ${suggestion.Country.LocalizedName}`}</div>\r\n        })}\r\n      </div>  \r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeLocation: (loc) => dispatch(setLocation(loc.locationKey, loc.cityName))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Search)\r\n","import React from 'react';\r\n\r\nfunction CurrentWeather({city,temp}) {\r\n  return (\r\n    <div className=\"current-weather\">\r\n       <p className=\"city\">{city}</p>\r\n       <p className=\"temp\">{temp} &#176;</p> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React from 'react';\r\n\r\nfunction ForecastItem({forecast}) {\r\n\r\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  let d = new Date(forecast.Date);\r\n  let dayName = days[d.getDay()];\r\n\r\n  const temp = forecast.Temperature.Minimum.Value;\r\n\r\n  return (\r\n    <div className=\"forecastItem\">\r\n      <div className=\"name\">{dayName}</div>\r\n      <div className=\"temp\">{temp} &#176;</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForecastItem;\r\n","import React from 'react';\r\nimport ForecastItem from './ForecastItem';\r\n\r\n\r\nfunction ForecastContainer({weatherForecast}) {\r\n\r\n\r\n    return (\r\n      <div className=\"forecast-container\">\r\n        {weatherForecast.map(forecast => (\r\n          <ForecastItem forecast={forecast} key={forecast.Date} />\r\n        ))}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ForecastContainer\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {removeFavorite,addFavorite} from '../actions';\r\nimport { FaHeart, FaRegHeart } from 'react-icons/fa';\r\n\r\nfunction FavortiesController({locationKey,add,remove,favoritesArr}) {\r\n  const filteredFavs = favoritesArr.filter((obj)=> {\r\n    return obj.locationKey === locationKey\r\n  });\r\n  const isFavorited = filteredFavs.length > 0;\r\n\r\n  return (\r\n    <div className=\"favorites-controller\">\r\n        {isFavorited? <FaHeart onClick={remove}/>: <FaRegHeart onClick={add}/>}\r\n        {isFavorited? <div onClick={remove} className=\"btn btn-remove\">Remove From Favorites</div>: <div onClick={add} className=\"btn btn-add\">Add to Favorites</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => ({\r\n  favoritesArr: state.favorites,\r\n  ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch,ownProps) => ({\r\n  add: () => dispatch(addFavorite(ownProps.locationKey, ownProps.cityName)),\r\n  remove: () => dispatch(removeFavorite(ownProps.locationKey))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, mapDispatchToProps\r\n)(FavortiesController)\r\n","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport { getCurrentWeather,getWeatherForecast } from '../API';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport ForecastContainer from './ForecastContainer';\r\nimport FavortiesController from './FavoritesController';\r\nimport {Spinner} from '../images/spinner.gif';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {currentWeather: null, weatherForecast:[], isLoading:false};\r\n        this.changeCurrentLocation = this.changeCurrentLocation.bind(this);\r\n    }\r\n\r\n    changeCurrentLocation() {\r\n        const location = this.props.location;\r\n        this.showLoading();\r\n        //re-render current weather component\r\n        const promise1 = getCurrentWeather(location.locationKey);\r\n        promise1\r\n        .then(res => {\r\n            this.setState({\r\n                currentWeather: res,\r\n                city: location.cityName,\r\n                currentLocationKey: location.locationKey\r\n            });\r\n        });\r\n        //re-render 5 day weather forecast\r\n        const promise2 = getWeatherForecast(location.locationKey);\r\n        promise2\r\n        .then(res => {\r\n            this.setState({\r\n                weatherForecast: res.DailyForecasts\r\n            });\r\n        });\r\n\r\n        Promise.all([promise1,promise2])\r\n        .then(()=> this.hideLoading());\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location != null && this.props.location.locationKey != null) {\r\n          this.changeCurrentLocation();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n      if(prevProps.location.locationKey !== this.props.location.locationKey) {\r\n        this.changeCurrentLocation();\r\n      }\r\n    }\r\n\r\n    showLoading() {\r\n        this.setState({isLoading: true});\r\n    }\r\n\r\n    hideLoading() {\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const isLoading = this.state.isLoading;\r\n        let currentCityElement, loadingElement;\r\n\r\n        if (this.state.currentWeather != null) {\r\n            currentCityElement = <CurrentWeather temp={this.state.currentWeather[0].Temperature.Metric.Value} city={this.props.location.cityName} />\r\n        }\r\n\r\n        if(isLoading) {\r\n            loadingElement = <div>{Spinner}</div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"home-page\">\r\n                {!isLoading && <Search key={this.props.location.locationKey}/>}\r\n                {loadingElement}\r\n                {currentCityElement}\r\n                <FavortiesController locationKey={this.props.location.locationKey} cityName={this.props.location.cityName}/>\r\n                <ForecastContainer weatherForecast={this.state.weatherForecast}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  location: state.location\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(HomePage)","import React, { Component } from 'react';\r\nimport { getCurrentWeather } from '../API';\r\nimport CurrentWeather from './CurrentWeather';\r\n\r\nclass FavoritesItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentWeather: null }\r\n  }\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    getCurrentWeather(this.props.locationKey)\r\n      .then(res => {\r\n        this.setState({\r\n          currentWeather: res,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let tempElement = '';\r\n\r\n    if (this.state.currentWeather != null) {\r\n      tempElement = <CurrentWeather temp={this.state.currentWeather[0].Temperature.Metric.Value} city={this.props.cityName} />\r\n    }\r\n    const onClick = () => this.props.clickHandler({cityName: this.props.cityName, locationKey: this.props.locationKey});\r\n    \r\n    return (\r\n      <div className=\"favoritesItem\" onClick={onClick}>\r\n        {tempElement}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FavoritesItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FavoritesItem from './FavoritesItem';\r\nimport { setLocation, setViewHome } from '../actions';\r\n\r\nfunction FavoritesPage({favoritesArr, onFavoriteSelect}) {\r\n\r\n  return (\r\n    <div className=\"favoritesPage\">\r\n      {favoritesArr.map((obj) => {\r\n        return <FavoritesItem locationKey={obj.locationKey} cityName={obj.cityName} clickHandler={onFavoriteSelect} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  favoritesArr: state.favorites\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFavoriteSelect: (loc) => {\r\n    dispatch(setLocation(loc.locationKey, loc.cityName));\r\n    dispatch(setViewHome());\r\n  }\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FavoritesPage)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {VIEW_TYPES} from '../constants';\r\nimport HomePage from './HomePage';\r\nimport FavoritesPage from './FavoritesPage';\r\n\r\nfunction MainContent(props) {\r\n    const currentView = props.currentView;\r\n\r\n  return (\r\n    <div className=\"main\">\r\n    <div className=\"hero-image\"></div>\r\n        {currentView === VIEW_TYPES.HOME && <HomePage />}\r\n\r\n        {currentView === VIEW_TYPES.FAVORITES && <FavoritesPage/>}   \r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentView: state.view\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, null\r\n)(MainContent)\r\n","import React from 'react';\nimport './sass/app.scss';\nimport Header from './components/Header';\nimport MainContent from './components/MainContent';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header/>\n      <MainContent/>\n    </div>\n  );\n}\n\nexport default App;\n","import {actionTypes} from '../actions';\r\nimport {VIEW_TYPES} from '../constants';\r\n\r\nconst view = (state = VIEW_TYPES.HOME, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.SET_VIEW_FAVORITES:\r\n        return VIEW_TYPES.FAVORITES;\r\n\r\n      case actionTypes.SET_VIEW_HOME:\r\n        return VIEW_TYPES.HOME;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default view;","import {actionTypes} from '../actions';\r\n\r\nconst favorites = (state = [], action) => {\r\n    switch (action.type) {\r\n      case actionTypes.ADD_FAVORITE:\r\n        return [...state,{locationKey:action.locationKey,cityName:action.cityName}];\r\n\r\n      case actionTypes.REMOVE_FAVORITE:\r\n      return [...state.filter((obj)=> obj.locationKey !== action.locationKey)];\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default favorites;","import {actionTypes} from '../actions';\r\nimport {DEFAULT_LOCATION_KEY,DEFAULT_LOCATION_NAME} from '../constants';\r\n\r\nconst defaultLocation = {locationKey:DEFAULT_LOCATION_KEY,cityName:DEFAULT_LOCATION_NAME};\r\n\r\nconst location = (state = defaultLocation, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.SET_LOCATION:\r\n        return {locationKey:action.locationKey,cityName:action.cityName}\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default location;","import { combineReducers } from 'redux';\r\nimport view from './view';\r\nimport favorites from './favorites';\r\nimport location from './location';\r\n\r\nexport default combineReducers ({view,favorites,location})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n<Provider store={store}>\n    <App />\n</Provider>,\n document.getElementById('root'));"],"sourceRoot":""}